# Start containers (docker-compose up), and configure Drupal web install.
# After website comes up, click on `Appearance` in top bar, and notice a new theme called `Bootstrap` is there.
# That's the that has been added with our custom Dockerfile.
# Click `Install and set as default`. Then click `Back to site` (in top left) and the website interface should look different.
# You've successfully installed and activated a new theme in your own custom image without installing anything on your host other then Docker!
# If you exit (ctrl-c) and then `docker-compose down` it will delete containers, but not the volumes, so on next `docker-compose up` everything will be as it was.
# To totally clean up volumes, add `-v` to `down` command.

version: "3.7"

services:
  drupal:
    # When we add a build + image value to a compose service, it knows to use the image name to write to in our image cache, rather then pull from Docker Hub.
    # The "." indicates the dockerfile exists in the same directory as the compose file.
    build: .
    image: davidainslie/drupal
    ports:
      - 8080:80
    depends_on:
      - postgres
    volumes:
      - drupal-modules:/var/www/html/modules
      - drupal-profiles:/var/www/html/profiles
      - drupal-sites:/var/www/html/sites
      - drupal-themes:/var/www/html/themes

  postgres:
    image: postgres:9.6
    environment:
      POSTGRES_PASSWORD: blah
    volumes:
      - drupal-data:/var/lib/postgresql/data

volumes:
  drupal-modules:
  drupal-profiles:
  drupal-sites:
  drupal-themes:
  drupal-data: